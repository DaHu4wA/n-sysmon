# This file defines the default configuration for A-SysMon. To override these defaults, place a file
#  asysmon.properties on the root of the class path.
#
# Both files have the same syntax, with asysmon.properties having precedence over this file's contents.
#
# You can override settings in both files through use of system properties. System properties must however be
#  prefixed by 'asysmon.'.


# The config-factory must be the fqn of a class that implements AConfigFactory and has a public no-args constructor.
#  This class is instantiated and then provides the configuration for a-sysmon. The default config factory reads
#  and evaluates this file, but other implementations are free to hard-wire everything or read configurations from
#  arbitrary sources.
config-factory = com.ajjpj.asysmon.config.ADefaultConfigFactory

env-measurers = com.ajjpj.asysmon.measure.environment.AEnvVarEnvironmentMeasurer, \
                com.ajjpj.asysmon.measure.environment.ASysPropEnvironmentMeasurer, \
                com.ajjpj.asysmon.measure.environment.ACpuEnvironmentMeasurer, \
                com.ajjpj.asysmon.measure.environment.AMemInfoEnvironmentMeasurer, \
                com.ajjpj.asysmon.measure.environment.AFileSystemsEnvironmentMeasurer, \
                com.ajjpj.asysmon.measure.environment.AOverviewEnvironmentMeasurer

scalar-measurers = com.ajjpj.asysmon.measure.jdbc.AConnectionCounter, \
                   com.ajjpj.asysmon.measure.scalar.ACpuUtilizationMeasurer, \
                   com.ajjpj.asysmon.measure.scalar.AJmxGcMeasurerer, \
                   com.ajjpj.asysmon.measure.scalar.AJmxMemMeasurer, \
                   com.ajjpj.asysmon.measure.scalar.AProcDiskstatsMeasurer, \
                   com.ajjpj.asysmon.measure.scalar.AProcNetDevMeasurer, \
                   com.ajjpj.asysmon.measure.scalar.AProcSelfStatMeasurer, \
                   com.ajjpj.asysmon.measure.scalar.ASystemLoadMeasurer, \
                   com.ajjpj.asysmon.measure.threadpool.AThreadCountMeasurer


# The following line showcases all currently pre-defined data sinks, defining shorhand names for them.
#  None of them are enabled by default, however the following line can serve as a template for application
#  specific properties files. Just copy the line and remove all data sinks except for those you want.

# data-sinks = log4j, stdout, stderr, cyclic-dump-stdout, cyclic-dump-log4j-debug, cyclic-dump-log4j-info

data-sinks.log4j = com.ajjpj.asysmon.datasink.log.ALog4JDataSink
data-sinks.stdout = com.ajjpj.asysmon.datasink.log.AStdOutDataSink
data-sinks.stderr = com.ajjpj.asysmon.datasink.log.AStdErrDataSink

data-sinks.cyclic-dump-stdout = com.ajjpj.asysmon.datasink.cyclicdump.AStdOutCyclicMeasurementDumper
data-sinks.cyclic-dump-stdout.0.alias = cyclic-dump-initial-delay-seconds
data-sinks.cyclic-dump-stdout.1.alias = cyclic-dump-interval-seconds
data-sinks.cyclic-dump-stdout.2.alias = averaging-delay-for-scalars-millis

data-sinks.cyclic-dump-log4j-debug = com.ajjpj.asysmon.datasink.cyclicdump.ALog4JDebugCyclicMeasurementDumper
data-sinks.cyclic-dump-log4j-debug.0.alias = cyclic-dump-initial-delay-seconds
data-sinks.cyclic-dump-log4j-debug.1.alias = cyclic-dump-interval-seconds
data-sinks.cyclic-dump-log4j-debug.2.alias = averaging-delay-for-scalars-millis

data-sinks.cyclic-dump-log4j-info = com.ajjpj.asysmon.datasink.cyclicdump.ALog4JInfoCyclicMeasurementDumper
data-sinks.cyclic-dump-log4j-info.0.alias = cyclic-dump-initial-delay-seconds
data-sinks.cyclic-dump-log4j-info.1.alias = cyclic-dump-interval-seconds
data-sinks.cyclic-dump-log4j-info.2.alias = averaging-delay-for-scalars-millis

#TODO AHttpJsonOffloadingDataSink

presentation-menus = Context, Trace, Performance, Threads, Memory

presentation-menus.Context = EnvVar, Scalar
presentation-menus.Context.EnvVar = com.ajjpj.asysmon.servlet.environment.AEnvVarPageDefinition
presentation-menus.Context.Scalar = com.ajjpj.asysmon.servlet.environment.AScalarPageDefinition

presentation-menus.Trace = All, Http
presentation-menus.Trace.All = com.ajjpj.asysmon.servlet.trace.ATracePageDefinition
presentation-menus.Trace.All.0 = ALL
presentation-menus.Trace.All.1 = 50
presentation-menus.Trace.Http = com.ajjpj.asysmon.servlet.trace.ATracePageDefinition
presentation-menus.Trace.Http.0 = HTTP
presentation-menus.Trace.Http.1 = 30

presentation-menus.Performance = DrillDown, Jdbc
presentation-menus.Performance.DrillDown = com.ajjpj.asysmon.servlet.performance.drilldown.ADrillDownPageDefinition
presentation-menus.Performance.Jdbc = com.ajjpj.asysmon.servlet.performance.bottomup.AJdbcPageDefinition

presentation-menus.Threads = ThreadDump
presentation-menus.Threads.ThreadDump = com.ajjpj.asysmon.servlet.threaddump.AThreadDumpPageDefinition
presentation-menus.Threads.ThreadDump.0.alias = application-package

presentation-menus.Memory = com.ajjpj.asysmon.servlet.memgc.AMemGcPageDefinition


######################
# general parameters #
######################

# Some scalars must be measured as an average over a period of time (e.g. CPU usage). This parameter defines
#  the number of milliseconds over which these values are averaged.
averaging-delay-for-scalars-millis = 1000

# rate at which scalar measurements are dumped
cyclic-dump-interval-seconds = 60

# initial delay before starting to cyclically dump scalar measurements
cyclic-dump-initial-delay-seconds = 0

# a regular expression used to determine whether a given stack frame is 'application' or 'library' code
application-package = com

